
package com.mycompany.app;

import com.mycompany.app.PersonCursor.Factory;
import io.objectbox.EntityInfo;
import io.objectbox.annotation.apihint.Internal;
import io.objectbox.internal.CursorFactory;
import io.objectbox.internal.IdGetter;

// THIS CODE IS GENERATED BY ObjectBox, DO NOT EDIT.

/**
 * Properties for entity "Person". Can be used for QueryBuilder and for referencing DB names.
 */
public final class Person_ implements EntityInfo<Person> {

    // Leading underscores for static constants to avoid naming conflicts with property names

    public static final String __ENTITY_NAME = "Person";

    public static final int __ENTITY_ID = 2;

    public static final Class<Person> __ENTITY_CLASS = Person.class;

    public static final String __DB_NAME = "Person";

    public static final CursorFactory<Person> __CURSOR_FACTORY = new Factory();

    @Internal
    static final PersonIdGetter __ID_GETTER = new PersonIdGetter();

    public final static Person_ __INSTANCE = new Person_();

    public final static io.objectbox.Property<Person> id =
        new io.objectbox.Property<>(__INSTANCE, 0, 1, long.class, "id", true, "id");

    public final static io.objectbox.Property<Person> name =
        new io.objectbox.Property<>(__INSTANCE, 1, 2, String.class, "name");

    public final static io.objectbox.Property<Person> age =
        new io.objectbox.Property<>(__INSTANCE, 2, 3, int.class, "age");

    @SuppressWarnings("unchecked")
    public final static io.objectbox.Property<Person>[] __ALL_PROPERTIES = new io.objectbox.Property[]{
        id,
        name,
        age
    };

    public final static io.objectbox.Property<Person> __ID_PROPERTY = id;

    @Override
    public String getEntityName() {
        return __ENTITY_NAME;
    }

    @Override
    public int getEntityId() {
        return __ENTITY_ID;
    }

    @Override
    public Class<Person> getEntityClass() {
        return __ENTITY_CLASS;
    }

    @Override
    public String getDbName() {
        return __DB_NAME;
    }

    @Override
    public io.objectbox.Property<Person>[] getAllProperties() {
        return __ALL_PROPERTIES;
    }

    @Override
    public io.objectbox.Property<Person> getIdProperty() {
        return __ID_PROPERTY;
    }

    @Override
    public IdGetter<Person> getIdGetter() {
        return __ID_GETTER;
    }

    @Override
    public CursorFactory<Person> getCursorFactory() {
        return __CURSOR_FACTORY;
    }

    @Internal
    static final class PersonIdGetter implements IdGetter<Person> {
        @Override
        public long getId(Person object) {
            return object.id;
        }
    }

}
